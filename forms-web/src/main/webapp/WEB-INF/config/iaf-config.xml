<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as beans -->
<!--  <context:annotation-config />
    
 -->   
 	<context:component-scan base-package="edu.mizzou.incidentaccident.web"/>
 	<context:component-scan base-package="edu.mizzou.incidentaccident.api"/>
 	<mvc:interceptors>
      <bean class="edu.mizzou.incidentaccident.web.interceptors.UserInterceptor" />
    </mvc:interceptors>
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/css/**" location="/css/" /> 
	<mvc:resources mapping="/fa/**" location="/fa/" /> 
	<mvc:resources mapping="/fonts/**" location="/fonts/" /> 
	<mvc:resources mapping="/images/**" location="/images/" /> 
	<mvc:resources mapping="/js/**" location="/js/" /> 
	
	<!-- Error Definitions 
	<bean name="/error/404.do" class="org.springframework.web.servlet.mvc.ParameterizableViewController">
            <property name="viewName" value="error.404"/>
    </bean>
-->	
	<!-- Configures the Tiles layout system (resolves view names returned by Controllers to Tiles) -->	
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
       <property name="definitions">
           <list>
                   <value>/WEB-INF/error/tiles.xml</value>
                   <value>/WEB-INF/tiles/accident/tiles.xml</value>
                   <value>/WEB-INF/tiles/incident/tiles.xml</value>
                   <value>/WEB-INF/tiles/index/tiles.xml</value>
                   <value>/WEB-INF/tiles/layout/tiles.xml</value>
           </list>
       </property>
    </bean>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
            <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
    </bean>
	
	<!-- Configures the JSP layout system (resolves view names returned by Controllers to JSP in certain situations) -->	
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
    
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="-1" />
 
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
    
</beans>